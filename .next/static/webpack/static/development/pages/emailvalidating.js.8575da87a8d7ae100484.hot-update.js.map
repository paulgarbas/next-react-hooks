{"version":3,"file":"static/webpack/static\\development\\pages\\emailvalidating.js.8575da87a8d7ae100484.hot-update.js","sources":["webpack:///./src/EmailValidatingForm.js","webpack:///./src/useEmailValidation.js"],"sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport useInterval from \"./useInterval\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../static/site.css\";\r\nimport useEmailValidation from \"./useEmailValidation\";\r\n\r\nfunction EmailValidatingForm() {\r\n  const { count, email, setEmail, emailValid } = useEmailValidation(10);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <br />\r\n      <div>\r\n        <div className=\"content\">\r\n          <input\r\n            disabled={count <= 0}\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"Enter Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n          />\r\n          &nbsp;&nbsp;&nbsp;\r\n          <button\r\n            disabled={!emailValid || count <= 0}\r\n            onClick={() => alert(`button clicked with email ${email}`)}\r\n            className=\"btn-lg\"\r\n            type=\"submit\"\r\n          >\r\n            PRESS ME!\r\n          </button>\r\n          <div>\r\n            {count > 0\r\n              ? `You Have ${count} Seconds To Enter Your Email`\r\n              : \"Times Up\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default EmailValidatingForm;\r\n","const useEmailVaidation = secondsFormValidFor => {\r\n  const validateEmail = email => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const reducer = (state, action) => {\r\n    state = action;\r\n    setEmailValid(validateEmail(state));\r\n    return action;\r\n  };\r\n  const [email, setEmail] = useReducer(reducer, \"\");\r\n  const [count, setCount] = useState(secondsFormValidFor);\r\n  useInterval(\r\n    () => {\r\n      setCount(count - 1);\r\n    },\r\n    count > 0 ? 1000 : null\r\n  );\r\n\r\n  return { count, email, setEmail, emailValid };\r\n};\r\n\r\nexport default useEmailVaidation;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}